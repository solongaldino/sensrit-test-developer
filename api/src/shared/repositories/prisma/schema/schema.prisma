generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  name      String    @db.VarChar(45)
  email     String    @unique(map: "email_UNIQUE") @db.VarChar(45)
  password  String    @db.VarChar(255)
  createdAt DateTime  @db.DateTime(0)
  updatedAt DateTime? @db.DateTime(0)
  Sale      Sale[]
}

model Customer {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  name      String    @db.VarChar(200)
  email     String    @unique(map: "email_UNIQUE") @db.VarChar(45)
  createdAt DateTime  @db.DateTime(0)
  updatedAt DateTime? @db.DateTime(0)
  Sale      Sale[]
}

model Item {
  id        Int     @id @default(autoincrement()) @db.UnsignedInt
  amount    Int
  value     Decimal @db.Decimal(8, 2)
  saleId    Int     @db.UnsignedInt
  productId Int     @db.UnsignedInt
  Product   Product @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Item_Product1")
  Sale      Sale    @relation(fields: [saleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Item_Sale1")

  @@index([productId], map: "fk_Item_Product1_idx")
  @@index([saleId], map: "fk_Item_Sale1_idx")
}

model Product {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  name        String    @db.VarChar(200)
  value       Decimal   @db.Decimal(8, 2)
  description String?   @db.VarChar(1000)
  createdAt   DateTime  @db.DateTime(0)
  updatedAt   DateTime? @db.DateTime(0)
  Item        Item[]
}

model Sale {
  id         Int        @id @default(autoincrement()) @db.UnsignedInt
  customerId Int        @db.UnsignedInt
  userId     Int        @db.UnsignedInt
  amount     Decimal    @db.Decimal(8, 2)
  status     SaleStatus
  createdAt  DateTime   @db.DateTime(0)
  updatedAt  DateTime?  @db.DateTime(0)
  Customer   Customer   @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Sale_Customer1")
  User       User       @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Sale_User1")
  Item       Item[]

  @@index([customerId], map: "fk_Sale_Customer1_idx")
  @@index([userId], map: "fk_Sale_User1_idx")
}

enum SaleStatus {
  open
  finished
}
